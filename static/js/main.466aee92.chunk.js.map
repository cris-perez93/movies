{"version":3,"sources":["Components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movie","setMovie","searchterm","setSearchTerm","useEffect","a","axios","result","data","results","consultaApi","onSubmit","e","preventDefault","resultBusqueda","consultaApiBusqueda","type","placeholder","value","onChange","target","map","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA+BeA,EAjBD,SAAC,GAAkD,IAXhDC,EAWDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,aAE1C,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,YAAYC,IAjBvB,mCAiBuCJ,EAAaK,IAAKN,IAC7D,sBAAKI,UAAU,iBAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBJ,IACvB,sBAAMI,UAAS,eAlBZL,EAkB8BI,EAhBxCJ,GAAO,EACD,QACCA,GAAO,EACR,SAEA,QAWC,SAAmDI,OAErD,sBAAKC,UAAU,aAAf,UACE,0CACA,4BAAIF,WCkEHK,MA5Ef,WAEE,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA+CA,OA7CAC,qBAAU,YAES,uCAAG,4BAAAC,EAAA,sEAEGC,IAfvB,uHAaoB,OAEZC,EAFY,OAIlBN,EAASM,EAAOC,KAAKC,SAJH,2CAAH,qDAQfC,KAIH,IAgCC,eAAC,WAAD,WACA,qBAAKf,UAAU,mBAAf,SAGQ,sBAAMgB,SAjCS,SAACC,IACtBA,EAAEC,iBAEEX,KAEqB,uCAAG,4BAAAG,EAAA,sEAEKC,IAhCnC,6FAgCsDJ,GAFxB,OAElBY,EAFkB,OAMxBb,EAASa,EAAeN,KAAKC,SANL,2CAAH,oDAUrBM,GACAZ,EAAc,MAiBZ,SACI,uBACER,UAAU,SACVqB,KAAK,OACLC,YAAY,YACZC,MAAOhB,EACPiB,SAlBS,SAACP,GACtBT,EAAcS,EAAEQ,OAAOF,cAuBzB,qBAAKvB,UAAU,UAAf,SACE,qBAAKA,UAAU,kBAAf,SACGK,EAAMqB,KAAI,SAACrB,GAAD,OAAU,cAAC,EAAD,eAA0BA,GAAdA,EAAMsB,eCxEhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.466aee92.chunk.js","sourcesContent":["\r\nconst IMGPATH = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst colorTag =(vote) => {\r\n\r\n    if(vote >=8){\r\n      return 'green';\r\n    }else if (vote >=5){\r\n      return 'yellow';\r\n    }else {\r\n      return 'red';\r\n    }\r\n}\r\n\r\nconst Movie = ({title, poster_path, overview, vote_average}) => {\r\n   \r\n    return (\r\n        <div className=\"card_container\">\r\n            <img className=\"movie_img\" src= {IMGPATH + poster_path} alt={title}/>\r\n            <div className=\"info_container\">\r\n              <h3 className=\"title\">{title}</h3>\r\n              <span className={`tag ${colorTag(vote_average)}`}>{vote_average}</span>\r\n            </div>\r\n            <div className=\"movie_info\">\r\n              <h2>Overview</h2>\r\n              <p>{overview}</p>\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Movie;","import {useState, useEffect, Fragment} from 'react';\nimport axios from 'axios';\nimport Movie from './Components/Movie.js'\n\n\n\n\n\nconst APIURL =\n    \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\n\nconst SEARCHAPI =\n    \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\n\nfunction App() {\n\n  const [movie, setMovie]= useState([])\n  const [searchterm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n\n    const consultaApi = async () => {\n\n      const result = await axios (APIURL);\n\n      setMovie(result.data.results);\n\n      \n      };\n      consultaApi()\n\n\n         \n}, [])\n\n\n    const handleOnSubmit = (e) =>{\n      e.preventDefault();\n\n      if (searchterm){\n\n      const consultaApiBusqueda = async () => {\n\n          const resultBusqueda = await axios (SEARCHAPI + searchterm);\n\n          \n\n          setMovie(resultBusqueda.data.results)\n          };\n\n          \n          consultaApiBusqueda()\n          setSearchTerm(\"\");\n        }\n          \n    }\n\n    const handleOnChange = (e) =>{\n      setSearchTerm(e.target.value);\n    }\n\n  \n\n\n  return (\n    <Fragment>\n    <div className=\"header_container\">\n            \n            \n            <form onSubmit={handleOnSubmit}>\n                <input\n                  className=\"search\"\n                  type=\"text\"\n                  placeholder=\"Search...\"\n                  value={searchterm}\n                  onChange={handleOnChange}\n\n                />\n            </form>\n            \n        </div>\n    <div className=\"content\">\n      <div className=\"movie_container\">\n        {movie.map((movie)=> <Movie key={movie.id} {...movie}/>)}\n      </div>\n    </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}